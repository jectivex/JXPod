{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxstate-3js38",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/initialize(in:)",
                "title" : "func initialize(in: JXContext) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxstate-1k6lo",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/capturingconsolepod",
            "title" : "CapturingConsolePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/jxstate-8fw1c",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/jxstate-4t817",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartpod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartpod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartpod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/chartpod",
            "title" : "ChartPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/init(manager:)",
                "title" : "init(manager: CLLocationManager)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxstate-6c8xy",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/currentlocation()",
                "title" : "func currentLocation() async throws -> Location",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/locationmanager(_:didupdatelocations:)",
                "title" : "func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxstate-5uo0h",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/corelocationgeopod",
            "title" : "CoreLocationGeoPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/init(filemanager:)",
                "title" : "init(fileManager: FileManager)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/initialize(in:)",
                "title" : "func initialize(in: JXContext) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/filepod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/filepod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/filepod",
            "title" : "FilePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/jxstate-3jebu",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/jxstate-s29z",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/keypod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/keypod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/keypod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/keypod",
            "title" : "KeyPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/init(session:)",
                "title" : "init(session: URLSession)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/jxstate-4zjct",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/jxstate-9wc9b",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/netpod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/netpod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/netpod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/netpod",
            "title" : "NetPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxstate-541gv",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/initialize(in:)",
                "title" : "func initialize(in: JXContext) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/sleep(duration:)",
                "title" : "func sleep(duration: TimeInterval) async throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxstate-1njwx",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/oslogconsolepod",
            "title" : "OSLogConsolePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/init(canvas:)",
                "title" : "init(canvas: Canvas<Symbols>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxstate-17wwk",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxstate-1trdw",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/swiftuicanvaspod",
            "title" : "SwiftUICanvasPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/jxstate-87r1f",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/jxstate-3nt17",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/themepod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/initialize(in:)",
                    "title" : "func initialize(in: JXContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/themepod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/themepod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/themepod",
            "title" : "ThemePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/jxstate-97vn5",
                "title" : "var jxState: JXState?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/namespace",
                "title" : "let namespace: JXNamespace",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/initialize(in:)",
                "title" : "func initialize(in: JXContext) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/register(with:)",
                "title" : "func register(with: JXRegistry) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/sleep(duration:)",
                "title" : "func sleep(duration: TimeInterval) async throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/errors\/sleepdurationnan",
                    "title" : "case sleepDurationNaN",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/errors\/sleepdurationnegative",
                    "title" : "case sleepDurationNegative",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/represent()-3297y",
                        "title" : "func represent<T>() -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/represent()-4qnew",
                        "title" : "func represent<T>() -> T?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/timepod\/errors\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/dumperror(out:)",
                        "title" : "func dumpError<O>(out: inout O)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/timepod\/errors\/withinfo(for:_:prefix:)",
                        "title" : "func withInfo(for: String, () -> String, prefix: Bool?) -> Error",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/timepod\/errors\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/errors",
                "title" : "TimePod.Errors",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/jxstate-7z6b2",
                    "title" : "var jxState: JXState?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/jxnamespace",
                    "title" : "static var jxNamespace: JXNamespace",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/jxbridge(mirror:)",
                    "title" : "static func jxBridge(mirror: Mirror) -> JXBridge",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/jxbridging-implementations",
                "title" : "JXBridging Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/define(for:in:)",
                    "title" : "func define(for: Any, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/define(symbol:namespace:in:)",
                    "title" : "func define(symbol: String, namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/defineall(namespace:in:)",
                    "title" : "func defineAll(namespace: JXNamespace, in: JXContext) throws -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/jxmodule-implementations",
                "title" : "JXModule Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/module",
                    "title" : "var module: JXModule",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/jxpod-implementations",
                "title" : "JXPod Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/timepod",
            "title" : "TimePod",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/jxpod\/consolepod",
            "title" : "ConsolePod",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/geopod\/currentlocation()",
                "title" : "func currentLocation() async throws -> Location",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/jxpod\/geopod",
            "title" : "GeoPod",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxdynamicmodulesource\/ref",
                "title" : "Ref",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxdynamicmodulesource\/refs",
                "title" : "var refs: [Self.RefInfo]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxdynamicmodulesource\/archiveurl(for:)",
                "title" : "func archiveURL(for: Self.Ref) -> URL",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxdynamicmodulesource\/refinfo",
                "title" : "JXDynamicModuleSource.RefInfo",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/jxpod\/jxdynamicmodulesource",
            "title" : "JXDynamicModuleSource",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/jxpod\/jxpod\/module-1bzn",
                        "title" : "var module: JXModule",
                        "type" : "property"
                      }
                    ],
                    "title" : "JXPod Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/jxpod\/jxpod\/module-bx0v",
                "title" : "var module: JXModule",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxpod\/metadata",
                "title" : "static var metadata: JXPodMetaData",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/jxpod",
            "title" : "JXPod",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/namedref\/init(type:name:)",
                "title" : "init?(type: String, name: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/namedref\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/namedref\/semver",
                "title" : "var semver: SemVer?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/namedref\/type",
                "title" : "var type: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/namedref",
            "title" : "NamedRef",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(name:color:)",
                    "title" : "init(name: String, color: CSSColor.RGBColor)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/color",
                    "title" : "var color: CSSColor.RGBColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/name",
                    "title" : "var name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rawvalue",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aliceblue",
                    "title" : "static let aliceblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/allcases",
                    "title" : "static var allCases: [CSSColor.NamedColor]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/antiquewhite",
                    "title" : "static let antiquewhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aqua",
                    "title" : "static let aqua: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aquamarine",
                    "title" : "static let aquamarine: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/azure",
                    "title" : "static let azure: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/beige",
                    "title" : "static let beige: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/bisque",
                    "title" : "static let bisque: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/black",
                    "title" : "static let black: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blanchedalmond",
                    "title" : "static let blanchedalmond: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blue",
                    "title" : "static let blue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blueviolet",
                    "title" : "static let blueviolet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/brown",
                    "title" : "static let brown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/burlywood",
                    "title" : "static let burlywood: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cadetblue",
                    "title" : "static let cadetblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/chartreuse",
                    "title" : "static let chartreuse: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/chocolate",
                    "title" : "static let chocolate: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/coral",
                    "title" : "static let coral: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cornflowerblue",
                    "title" : "static let cornflowerblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cornsilk",
                    "title" : "static let cornsilk: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/crimson",
                    "title" : "static let crimson: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cyan",
                    "title" : "static let cyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkblue",
                    "title" : "static let darkblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkcyan",
                    "title" : "static let darkcyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgoldenrod",
                    "title" : "static let darkgoldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgray",
                    "title" : "static let darkgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgreen",
                    "title" : "static let darkgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgrey",
                    "title" : "static let darkgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkkhaki",
                    "title" : "static let darkkhaki: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkmagenta",
                    "title" : "static let darkmagenta: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkolivegreen",
                    "title" : "static let darkolivegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkorange",
                    "title" : "static let darkorange: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkorchid",
                    "title" : "static let darkorchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkred",
                    "title" : "static let darkred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darksalmon",
                    "title" : "static let darksalmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkseagreen",
                    "title" : "static let darkseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslateblue",
                    "title" : "static let darkslateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslategray",
                    "title" : "static let darkslategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslategrey",
                    "title" : "static let darkslategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkturquoise",
                    "title" : "static let darkturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkviolet",
                    "title" : "static let darkviolet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/deeppink",
                    "title" : "static let deeppink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/deepskyblue",
                    "title" : "static let deepskyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dimgray",
                    "title" : "static let dimgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dimgrey",
                    "title" : "static let dimgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dodgerblue",
                    "title" : "static let dodgerblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/firebrick",
                    "title" : "static let firebrick: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/floralwhite",
                    "title" : "static let floralwhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/forestgreen",
                    "title" : "static let forestgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/fuchsia",
                    "title" : "static let fuchsia: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gainsboro",
                    "title" : "static let gainsboro: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/ghostwhite",
                    "title" : "static let ghostwhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gold",
                    "title" : "static let gold: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/goldenrod",
                    "title" : "static let goldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gray",
                    "title" : "static let gray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/green",
                    "title" : "static let green: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/greenyellow",
                    "title" : "static let greenyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/grey",
                    "title" : "static let grey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/honeydew",
                    "title" : "static let honeydew: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hotpink",
                    "title" : "static let hotpink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/indianred",
                    "title" : "static let indianred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/indigo",
                    "title" : "static let indigo: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/ivory",
                    "title" : "static let ivory: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/khaki",
                    "title" : "static let khaki: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lavender",
                    "title" : "static let lavender: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lavenderblush",
                    "title" : "static let lavenderblush: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lawngreen",
                    "title" : "static let lawngreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lemonchiffon",
                    "title" : "static let lemonchiffon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightblue",
                    "title" : "static let lightblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightcoral",
                    "title" : "static let lightcoral: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightcyan",
                    "title" : "static let lightcyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgoldenrodyellow",
                    "title" : "static let lightgoldenrodyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgray",
                    "title" : "static let lightgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgreen",
                    "title" : "static let lightgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgrey",
                    "title" : "static let lightgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightpink",
                    "title" : "static let lightpink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightsalmon",
                    "title" : "static let lightsalmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightseagreen",
                    "title" : "static let lightseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightskyblue",
                    "title" : "static let lightskyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightslategray",
                    "title" : "static let lightslategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightslategrey",
                    "title" : "static let lightslategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightsteelblue",
                    "title" : "static let lightsteelblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightyellow",
                    "title" : "static let lightyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lime",
                    "title" : "static let lime: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/limegreen",
                    "title" : "static let limegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/linen",
                    "title" : "static let linen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/magenta",
                    "title" : "static let magenta: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/maroon",
                    "title" : "static let maroon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumaquamarine",
                    "title" : "static let mediumaquamarine: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumblue",
                    "title" : "static let mediumblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumorchid",
                    "title" : "static let mediumorchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumpurple",
                    "title" : "static let mediumpurple: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumseagreen",
                    "title" : "static let mediumseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumslateblue",
                    "title" : "static let mediumslateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumspringgreen",
                    "title" : "static let mediumspringgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumturquoise",
                    "title" : "static let mediumturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumvioletred",
                    "title" : "static let mediumvioletred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/midnightblue",
                    "title" : "static let midnightblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mintcream",
                    "title" : "static let mintcream: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mistyrose",
                    "title" : "static let mistyrose: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/moccasin",
                    "title" : "static let moccasin: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/navajowhite",
                    "title" : "static let navajowhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/navy",
                    "title" : "static let navy: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/oldlace",
                    "title" : "static let oldlace: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/olive",
                    "title" : "static let olive: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/olivedrab",
                    "title" : "static let olivedrab: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orange",
                    "title" : "static let orange: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orangered",
                    "title" : "static let orangered: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orchid",
                    "title" : "static let orchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palegoldenrod",
                    "title" : "static let palegoldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palegreen",
                    "title" : "static let palegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/paleturquoise",
                    "title" : "static let paleturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palevioletred",
                    "title" : "static let palevioletred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/papayawhip",
                    "title" : "static let papayawhip: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/peachpuff",
                    "title" : "static let peachpuff: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/peru",
                    "title" : "static let peru: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/pink",
                    "title" : "static let pink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/plum",
                    "title" : "static let plum: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/powderblue",
                    "title" : "static let powderblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/purple",
                    "title" : "static let purple: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/red",
                    "title" : "static let red: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rosybrown",
                    "title" : "static let rosybrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/royalblue",
                    "title" : "static let royalblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/saddlebrown",
                    "title" : "static let saddlebrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/salmon",
                    "title" : "static let salmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/sandybrown",
                    "title" : "static let sandybrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/seagreen",
                    "title" : "static let seagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/seashell",
                    "title" : "static let seashell: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/sienna",
                    "title" : "static let sienna: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/silver",
                    "title" : "static let silver: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/skyblue",
                    "title" : "static let skyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slateblue",
                    "title" : "static let slateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slategray",
                    "title" : "static let slategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slategrey",
                    "title" : "static let slategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/snow",
                    "title" : "static let snow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/springgreen",
                    "title" : "static let springgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/steelblue",
                    "title" : "static let steelblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tan",
                    "title" : "static let tan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/teal",
                    "title" : "static let teal: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/thistle",
                    "title" : "static let thistle: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tomato",
                    "title" : "static let tomato: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/transparent",
                    "title" : "static let transparent: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/turquoise",
                    "title" : "static let turquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/violet",
                    "title" : "static let violet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/wheat",
                    "title" : "static let wheat: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/white",
                    "title" : "static let white: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/whitesmoke",
                    "title" : "static let whitesmoke: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/yellow",
                    "title" : "static let yellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/yellowgreen",
                    "title" : "static let yellowgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(json:decoder:allowsjson5:datadecodingstrategy:datedecodingstrategy:nonconformingfloatdecodingstrategy:keydecodingstrategy:userinfo:)",
                        "title" : "init(json: Data, decoder: () -> JSONDecoder, allowsJSON5: Bool, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy?, dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?, nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy?, keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(jsum:options:)",
                        "title" : "init(jsum: JSum, options: JSumDecodingOptions?) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/codablecomplete(data:encoder:decoder:)",
                        "title" : "static func codableComplete(data: Data, encoder: JSONEncoder?, decoder: JSONDecoder?) throws -> (instance: Self, difference: JSum?)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/canonicaljson",
                        "title" : "var canonicalJSON: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/debugjson",
                        "title" : "var debugJSON: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/prettyjson",
                        "title" : "var prettyJSON: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/json(encoder:outputformatting:dateencodingstrategy:dataencodingstrategy:nonconformingfloatencodingstrategy:keyencodingstrategy:userinfo:)",
                        "title" : "func json(encoder: () -> JSONEncoder, outputFormatting: JSONEncoder.OutputFormatting?, dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, dataEncodingStrategy: JSONEncoder.DataEncodingStrategy?, nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws -> Data",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/jsum(options:)",
                        "title" : "func jsum(options: JSumEncodingOptions?) throws -> JSum",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/represent()-3p0sq",
                        "title" : "func represent<T>() -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/represent()-8f0pj",
                        "title" : "func represent<T>() -> T?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/namedcolor",
                "title" : "CSSColor.NamedColor",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(integerliteral:)",
                    "title" : "init(integerLiteral: IntegerLiteralType)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(r:g:b:a:)",
                    "title" : "init(r: Double, g: Double, b: Double, a: Double?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/a",
                    "title" : "var a: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/b",
                    "title" : "var b: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/g",
                    "title" : "var g: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/nativecolor",
                    "title" : "var nativeColor: CIColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/r",
                    "title" : "var r: Double",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/parsecolor(css:)",
                    "title" : "static func parseColor(css: String) throws -> CSSColor.RGBColor",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/parsehexcolor(css:)",
                    "title" : "static func parseHexColor(css: String) throws -> CSSColor.RGBColor",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(json:decoder:allowsjson5:datadecodingstrategy:datedecodingstrategy:nonconformingfloatdecodingstrategy:keydecodingstrategy:userinfo:)",
                        "title" : "init(json: Data, decoder: () -> JSONDecoder, allowsJSON5: Bool, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy?, dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?, nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy?, keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(jsum:options:)",
                        "title" : "init(jsum: JSum, options: JSumDecodingOptions?) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/codablecomplete(data:encoder:decoder:)",
                        "title" : "static func codableComplete(data: Data, encoder: JSONEncoder?, decoder: JSONDecoder?) throws -> (instance: Self, difference: JSum?)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/canonicaljson",
                        "title" : "var canonicalJSON: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/debugjson",
                        "title" : "var debugJSON: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/prettyjson",
                        "title" : "var prettyJSON: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/json(encoder:outputformatting:dateencodingstrategy:dataencodingstrategy:nonconformingfloatencodingstrategy:keyencodingstrategy:userinfo:)",
                        "title" : "func json(encoder: () -> JSONEncoder, outputFormatting: JSONEncoder.OutputFormatting?, dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, dataEncodingStrategy: JSONEncoder.DataEncodingStrategy?, nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws -> Data",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/jsum(options:)",
                        "title" : "func jsum(options: JSumEncodingOptions?) throws -> JSum",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/represent()-3detq",
                        "title" : "func represent<T>() -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/represent()-8wtss",
                        "title" : "func represent<T>() -> T",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor",
                "title" : "CSSColor.RGBColor",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(name:)",
                "title" : "init(name: CSSColor.NamedColor)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(nativecolor:)",
                "title" : "init(nativeColor: CIColor)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(rgb:)",
                "title" : "init(rgb: CSSColor.RGBColor)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/nativecolor",
                "title" : "var nativeColor: CIColor",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/rep",
                "title" : "var rep: CSSColor.ColorRepresentation",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/hexstringinvalid(string:)",
                    "title" : "case hexStringInvalid(string: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/hexstringmissingpercent",
                    "title" : "case hexStringMissingPercent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/parseerrors(errors:)",
                    "title" : "case parseErrors(errors: [Error])",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/dumperror(out:)",
                        "title" : "func dumpError<O>(out: inout O)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/withinfo(for:_:prefix:)",
                        "title" : "func withInfo(for: String, () -> String, prefix: Bool?) -> Error",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/colorerror",
                "title" : "CSSColor.ColorError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/name(_:)",
                    "title" : "case name(CSSColor.NamedColor)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/rgb(_:)",
                    "title" : "case rgb(CSSColor.RGBColor)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/represent()-1hmsx",
                        "title" : "func represent<T>() -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/represent()-81bti",
                        "title" : "func represent<T>() -> T?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation",
                "title" : "CSSColor.ColorRepresentation",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/init(json:decoder:allowsjson5:datadecodingstrategy:datedecodingstrategy:nonconformingfloatdecodingstrategy:keydecodingstrategy:userinfo:)",
                    "title" : "init(json: Data, decoder: () -> JSONDecoder, allowsJSON5: Bool, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy?, dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?, nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy?, keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/init(jsum:options:)",
                    "title" : "init(jsum: JSum, options: JSumDecodingOptions?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/codablecomplete(data:encoder:decoder:)",
                    "title" : "static func codableComplete(data: Data, encoder: JSONEncoder?, decoder: JSONDecoder?) throws -> (instance: Self, difference: JSum?)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/canonicaljson",
                    "title" : "var canonicalJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/debugjson",
                    "title" : "var debugJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/prettyjson",
                    "title" : "var prettyJSON: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/json(encoder:outputformatting:dateencodingstrategy:dataencodingstrategy:nonconformingfloatencodingstrategy:keyencodingstrategy:userinfo:)",
                    "title" : "func json(encoder: () -> JSONEncoder, outputFormatting: JSONEncoder.OutputFormatting?, dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, dataEncodingStrategy: JSONEncoder.DataEncodingStrategy?, nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws -> Data",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/jsum(options:)",
                    "title" : "func jsum(options: JSumEncodingOptions?) throws -> JSum",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/represent()-2ens",
                    "title" : "func represent<T>() -> T?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/represent()-83f5s",
                    "title" : "func represent<T>() -> T",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/csscolor",
            "title" : "CSSColor",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxpodmetadata\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/jxpodmetadata\/init(source:)",
                "title" : "init(source: URL)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jxpodmetadata\/source",
                "title" : "var source: URL",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/init(json:decoder:allowsjson5:datadecodingstrategy:datedecodingstrategy:nonconformingfloatdecodingstrategy:keydecodingstrategy:userinfo:)",
                    "title" : "init(json: Data, decoder: () -> JSONDecoder, allowsJSON5: Bool, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy?, dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?, nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy?, keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/init(jsum:options:)",
                    "title" : "init(jsum: JSum, options: JSumDecodingOptions?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/codablecomplete(data:encoder:decoder:)",
                    "title" : "static func codableComplete(data: Data, encoder: JSONEncoder?, decoder: JSONDecoder?) throws -> (instance: Self, difference: JSum?)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/jxpodmetadata\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/canonicaljson",
                    "title" : "var canonicalJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/debugjson",
                    "title" : "var debugJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/prettyjson",
                    "title" : "var prettyJSON: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/json(encoder:outputformatting:dateencodingstrategy:dataencodingstrategy:nonconformingfloatencodingstrategy:keyencodingstrategy:userinfo:)",
                    "title" : "func json(encoder: () -> JSONEncoder, outputFormatting: JSONEncoder.OutputFormatting?, dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, dataEncodingStrategy: JSONEncoder.DataEncodingStrategy?, nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws -> Data",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/jxpodmetadata\/jsum(options:)",
                    "title" : "func jsum(options: JSumEncodingOptions?) throws -> JSum",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/jxpodmetadata\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/jxpodmetadata",
            "title" : "JXPodMetaData",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/altitude",
                "title" : "var altitude: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/latitude",
                "title" : "var latitude: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/longitude",
                "title" : "var longitude: Double",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/init(json:decoder:allowsjson5:datadecodingstrategy:datedecodingstrategy:nonconformingfloatdecodingstrategy:keydecodingstrategy:userinfo:)",
                    "title" : "init(json: Data, decoder: () -> JSONDecoder, allowsJSON5: Bool, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy?, dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?, nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy?, keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/init(jsum:options:)",
                    "title" : "init(jsum: JSum, options: JSumDecodingOptions?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/codablecomplete(data:encoder:decoder:)",
                    "title" : "static func codableComplete(data: Data, encoder: JSONEncoder?, decoder: JSONDecoder?) throws -> (instance: Self, difference: JSum?)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/canonicaljson",
                    "title" : "var canonicalJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/debugjson",
                    "title" : "var debugJSON: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/prettyjson",
                    "title" : "var prettyJSON: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/json(encoder:outputformatting:dateencodingstrategy:dataencodingstrategy:nonconformingfloatencodingstrategy:keyencodingstrategy:userinfo:)",
                    "title" : "func json(encoder: () -> JSONEncoder, outputFormatting: JSONEncoder.OutputFormatting?, dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, dataEncodingStrategy: JSONEncoder.DataEncodingStrategy?, nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, userInfo: [CodingUserInfoKey : Any]?) throws -> Data",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/jsum(options:)",
                    "title" : "func jsum(options: JSumEncodingOptions?) throws -> JSum",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/represent()-28p8p",
                    "title" : "func represent<T>() -> T?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/represent()-8sj42",
                    "title" : "func represent<T>() -> T",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/location",
            "title" : "Location",
            "type" : "struct"
          }
        ],
        "path" : "\/documentation\/jxpod",
        "title" : "JXPod",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}