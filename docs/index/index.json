{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/init(width:actualboundingboxleft:actualboundingboxright:fontboundingboxascent:fontboundingboxdescent:actualboundingboxascent:actualboundingboxdescent:emheightascent:emheightdescent:hangingbaseline:alphabeticbaseline:ideographicbaseline:)",
                    "title" : "init(width: Double, actualBoundingBoxLeft: Double?, actualBoundingBoxRight: Double?, fontBoundingBoxAscent: Double?, fontBoundingBoxDescent: Double?, actualBoundingBoxAscent: Double?, actualBoundingBoxDescent: Double?, emHeightAscent: Double?, emHeightDescent: Double?, hangingBaseline: Double?, alphabeticBaseline: Double?, ideographicBaseline: Double?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/actualboundingboxascent",
                    "title" : "var actualBoundingBoxAscent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/actualboundingboxdescent",
                    "title" : "var actualBoundingBoxDescent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/actualboundingboxleft",
                    "title" : "var actualBoundingBoxLeft: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/actualboundingboxright",
                    "title" : "var actualBoundingBoxRight: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/alphabeticbaseline",
                    "title" : "var alphabeticBaseline: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/emheightascent",
                    "title" : "var emHeightAscent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/emheightdescent",
                    "title" : "var emHeightDescent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/fontboundingboxascent",
                    "title" : "var fontBoundingBoxAscent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/fontboundingboxdescent",
                    "title" : "var fontBoundingBoxDescent: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/hangingbaseline",
                    "title" : "var hangingBaseline: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/ideographicbaseline",
                    "title" : "var ideographicBaseline: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/width",
                    "title" : "var width: Double",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/fromjx(_:)",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textmetrics",
                "title" : "AbstractCanvasPod.TextMetrics",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/fillstyle",
                "title" : "var fillStyle: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/font",
                "title" : "var font: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/globalalpha",
                "title" : "var globalAlpha: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/globalcompositeoperation",
                "title" : "var globalCompositeOperation: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/height",
                "title" : "var height: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/imagesmoothingenabled",
                "title" : "var imageSmoothingEnabled: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/linecap",
                "title" : "var lineCap: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/linedashoffset",
                "title" : "var lineDashOffset: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/linejoin",
                "title" : "var lineJoin: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/linewidth",
                "title" : "var lineWidth: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/miterlimit",
                "title" : "var miterLimit: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/shadowblur",
                "title" : "var shadowBlur: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/shadowcolor",
                "title" : "var shadowColor: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/shadowoffsetx",
                "title" : "var shadowOffsetX: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/shadowoffsety",
                "title" : "var shadowOffsetY: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/strokestyle",
                "title" : "var strokeStyle: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textalign",
                "title" : "var textAlign: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/textbaseline",
                "title" : "var textBaseline: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/width",
                "title" : "var width: Double",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/measuretext(value:)",
                "title" : "func measureText(value: String) -> AbstractCanvasPod.TextMetrics?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/objectwillchange-5fu99",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/abstractcanvaspod\/objectwillchange-7rg0x",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/abstractcanvaspod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/abstractcanvaspod",
            "title" : "AbstractCanvasPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/objectwillchange-647oz",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/capturingconsolepod\/objectwillchange-77k83",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/capturingconsolepod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/capturingconsolepod",
            "title" : "CapturingConsolePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/opacity",
                    "title" : "var opacity: Double?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/fromjx(_:)",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartbuilder\/chartconfig",
                "title" : "ChartBuilder.ChartConfig",
                "type" : "struct"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartbuilder\/anychart",
                "title" : "var anyChart: AnyChartContent",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/chartbuilder\/childcharts",
                "title" : "var childCharts: [JackedChart]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/chartbuilder",
            "title" : "ChartBuilder",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/chartpod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/objectwillchange-4mjyl",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartpod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/chartpod\/objectwillchange-1dfm0",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/chartpod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/chartpod",
            "title" : "ChartPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/init(context:size:)",
                "title" : "init(context: CGContext, size: CGSize)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/backgroundcolor",
                "title" : "var backgroundColor: CGColor?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/fillstyle",
                "title" : "var fillStyle: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/globalalpha",
                "title" : "var globalAlpha: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/globalcompositeoperation",
                "title" : "var globalCompositeOperation: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/height",
                "title" : "var height: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/linecap",
                "title" : "var lineCap: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/linedashoffset",
                "title" : "var lineDashOffset: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/linejoin",
                "title" : "var lineJoin: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/linewidth",
                "title" : "var lineWidth: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/miterlimit",
                "title" : "var miterLimit: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/size",
                "title" : "var size: CGSize",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/strokestyle",
                "title" : "var strokeStyle: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/width",
                "title" : "var width: Double",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/arc(x:y:radius:startangle:endangle:anticlockwise:)",
                "title" : "func arc(x: Double, y: Double, radius: Double, startAngle: Double, endAngle: Double, anticlockwise: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/arcto(x1:y1:x2:y2:radius:)",
                "title" : "func arcTo(x1: Double, y1: Double, x2: Double, y2: Double, radius: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/beginpath()",
                "title" : "func beginPath()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/beziercurveto(cp1x:cp1y:cp2x:cp2y:x:y:)",
                "title" : "func bezierCurveTo(cp1x: Double, cp1y: Double, cp2x: Double, cp2y: Double, x: Double, y: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/clearrect(x:y:w:h:)",
                "title" : "func clearRect(x: Double, y: Double, w: Double, h: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/clip()",
                "title" : "func clip()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/closepath()",
                "title" : "func closePath()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/createconicgradient(startangle:x:y:)",
                "title" : "func createConicGradient(startAngle: Double, x: Double, y: Double) -> CanvasGradientAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/createimagedata(width:height:)",
                "title" : "func createImageData(width: Double, height: Double) -> ImageDataAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/createlineargradient(x0:y0:x1:y1:)",
                "title" : "func createLinearGradient(x0: Double, y0: Double, x1: Double, y1: Double) -> CanvasGradientAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/createpattern(image:repetition:)",
                "title" : "func createPattern(image: ImageDataAPI, repetition: String) -> CanvasPatternAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/createradialgradient(x0:y0:r0:x1:y1:r1:)",
                "title" : "func createRadialGradient(x0: Double, y0: Double, r0: Double, x1: Double, y1: Double, r1: Double) -> CanvasGradientAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/drawfocusifneeded(path:element:)",
                "title" : "func drawFocusIfNeeded(path: Any, element: Any)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/drawimage(image:dx:dy:dwidth:dheight:)",
                "title" : "func drawImage(image: ImageDataAPI, dx: Double, dy: Double, dWidth: Double, dHeight: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/ellipse(x:y:radiusx:radiusy:rotation:startangle:endangle:)",
                "title" : "func ellipse(x: Double, y: Double, radiusX: Double, radiusY: Double, rotation: Double, startAngle: Double, endAngle: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/fill()",
                "title" : "func fill()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/fillrect(x:y:w:h:)",
                "title" : "func fillRect(x: Double, y: Double, w: Double, h: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/filltext(text:x:y:maxwidth:)",
                "title" : "func fillText(text: String, x: Double, y: Double, maxWidth: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/getcontextattributes()",
                "title" : "func getContextAttributes() -> CanvasRenderingContext2DSettingsAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/getimagedata(sx:sy:sw:sh:)",
                "title" : "func getImageData(sx: Double, sy: Double, sw: Double, sh: Double) -> ImageDataAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/getlinedash()",
                "title" : "func getLineDash() -> [Double]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/gettransform()",
                "title" : "func getTransform() -> DOMMatrixAPI?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/ispointinpath(x:y:)",
                "title" : "func isPointInPath(x: Double, y: Double) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/ispointinstroke(x:y:)",
                "title" : "func isPointInStroke(x: Double, y: Double) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/lineto(x:y:)",
                "title" : "func lineTo(x: Double, y: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/measuretext(value:)",
                "title" : "func measureText(value: String) -> AbstractCanvasPod.TextMetrics?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/moveto(x:y:)",
                "title" : "func moveTo(x: Double, y: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/putimagedata(imagedata:dx:dy:)",
                "title" : "func putImageData(imageData: ImageDataAPI, dx: Double, dy: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/quadraticcurveto(cpx:cpy:x:y:)",
                "title" : "func quadraticCurveTo(cpx: Double, cpy: Double, x: Double, y: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/rect(x:y:w:h:)",
                "title" : "func rect(x: Double, y: Double, w: Double, h: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/restore()",
                "title" : "func restore()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/rotate(angle:)",
                "title" : "func rotate(angle: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/save()",
                "title" : "func save()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/scale(x:y:)",
                "title" : "func scale(x: Double, y: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/setlinedash(segments:)",
                "title" : "func setLineDash(segments: [Double])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/settransform(a:b:c:d:e:f:)",
                "title" : "func setTransform(a: Double, b: Double, c: Double, d: Double, e: Double, f: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/stroke()",
                "title" : "func stroke()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/strokerect(x:y:width:height:)",
                "title" : "func strokeRect(x: Double, y: Double, width: Double, height: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/stroketext(text:x:y:maxwidth:)",
                "title" : "func strokeText(text: String, x: Double, y: Double, maxWidth: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/transformx(a:b:c:d:e:f:)",
                "title" : "func transformX(a: Double, b: Double, c: Double, d: Double, e: Double, f: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/translate(x:y:)",
                "title" : "func translate(x: Double, y: Double)",
                "type" : "method"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/coregraphicscanvaspod\/drawpdf(size:handler:)",
                "title" : "static func drawPDF(size: CGSize, handler: (CoreGraphicsCanvasPod) throws -> ()) throws -> Data",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/jxpod\/coregraphicscanvaspod",
            "title" : "CoreGraphicsCanvasPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/init(manager:)",
                "title" : "init(manager: CLLocationManager)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/currentlocation()",
                "title" : "func currentLocation() async throws -> Location",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/locationmanager(_:didupdatelocations:)",
                "title" : "func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/objectwillchange-7q2b6",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/corelocationgeopod\/objectwillchange-4bktt",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/corelocationgeopod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/corelocationgeopod",
            "title" : "CoreLocationGeoPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/init(fm:)",
                "title" : "init(fm: FileManager)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/filepod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/objectwillchange-61dno",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/filepod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/filepod\/objectwillchange-6yrh3",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/filepod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/filepod",
            "title" : "FilePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/keypod\/unlock()",
                "title" : "func unlock() async throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/objectwillchange-2506e",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/keypod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/keypod\/objectwillchange-2qfsg",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/keypod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/keypod",
            "title" : "KeyPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/init(session:)",
                "title" : "init(session: URLSession)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/netpod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/objectwillchange-2hqnj",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/netpod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/netpod\/objectwillchange-9vtn8",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/netpod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/netpod",
            "title" : "NetPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/objectwillchange-538ut",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/oslogconsolepod\/objectwillchange-1js7i",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/oslogconsolepod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/oslogconsolepod",
            "title" : "OSLogConsolePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/init(canvas:)",
                "title" : "init(canvas: Canvas<Symbols>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/objectwillchange-8r7my",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/objectwillchange-16r6x",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/swiftuicanvaspod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/swiftuicanvaspod",
            "title" : "SwiftUICanvasPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/size",
                    "title" : "var size: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/style",
                    "title" : "var style: FontTemplate.TextStyle?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/weight",
                    "title" : "var weight: FontTemplate.Weight?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/fromjx(_:)",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/texttemplate\/fontconfig",
                "title" : "TextTemplate.FontConfig",
                "type" : "struct"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/texttemplate\/anyview",
                "title" : "var anyView: AnyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/texttemplate\/body",
                "title" : "var body: Text",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/texttemplate\/config",
                "title" : "var config: TextTemplate.FontConfig",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/texttemplate\/value",
                "title" : "var value: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/texttemplate\/buildtextview(_:)",
                "title" : "func buildTextView(Text) -> some View",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/jxpod\/texttemplate",
            "title" : "TextTemplate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/backgroundcolor",
                "title" : "var backgroundColor: CSSColor?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/themepod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/objectwillchange-78gmi",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/themepod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/themepod\/objectwillchange-3dvbv",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/themepod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/themepod",
            "title" : "ThemePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/timepod\/sleep(duration:)",
                "title" : "func sleep(duration: TimeInterval) async throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/objectwillchange-8ujzl",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/timepod\/objectwillchange-6yn4f",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/timepod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/timepod",
            "title" : "TimePod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/uipod\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/uipod\/metadata",
                "title" : "var metadata: JackPodMetaData",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/uipod\/objectwillchange-5jkg1",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/uipod\/inject(into:)",
                    "title" : "func inject(into: JXValue) throws -> [JXProperty]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/uipod\/jack(into:)",
                    "title" : "func jack(into: JXValue) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/uipod\/jackedobject-implementations",
                "title" : "JackedObject Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/uipod\/objectwillchange-575jy",
                    "title" : "var objectWillChange: ObservableObjectPublisher",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/jxpod\/uipod\/observableobject-implementations",
                "title" : "ObservableObject Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/uipod",
            "title" : "UIPod",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/id",
                    "title" : "var id: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/opacity",
                    "title" : "var opacity: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/padding",
                    "title" : "var padding: CGFloat?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.property",
                    "title" : "var transition: ViewTemplate.ViewConfig.Transition?",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/identity",
                        "title" : "case identity",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/opacity",
                        "title" : "case opacity",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/scale",
                        "title" : "case scale",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/slide",
                        "title" : "case slide",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/fromjx(_:)-5bnw4",
                        "title" : "static func fromJX(JXValue) throws -> ViewTemplate.ViewConfig.Transition",
                        "type" : "method"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Type Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/fromjx(_:)-3k6a9",
                            "title" : "static func fromJX(JXValue) throws -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/fromjxcodable(_:)",
                            "title" : "static func fromJXCodable(JXValue) throws -> Self",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/decodable-implementations",
                        "title" : "Decodable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/tojxcodable(in:)",
                            "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/encodable-implementations",
                        "title" : "Encodable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/init(from:)",
                            "title" : "init(from: Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/encode(to:)",
                            "title" : "func encode(to: Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/tojxraw(in:)",
                            "title" : "func toJXRaw(in: JXContext) throws -> JXValue",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/fromjx(_:)-2ghqv",
                            "title" : "static func fromJX(JXValue) throws -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/fromjxraw(_:)",
                            "title" : "static func fromJXRaw(JXValue) throws -> Self",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/transition-swift.enum",
                    "title" : "ViewTemplate.ViewConfig.Transition",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/fromjx(_:)",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/viewtemplate\/viewconfig",
                "title" : "ViewTemplate.ViewConfig",
                "type" : "struct"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/viewtemplate\/anyview",
                "title" : "var anyView: AnyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/viewtemplate\/childviews",
                "title" : "var childViews: [JackedView]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/viewtemplate",
            "title" : "ViewTemplate",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/jxpod\/canvaspod",
            "title" : "CanvasPod",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/jxpod\/consolepod",
            "title" : "ConsolePod",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/geopod\/currentlocation()",
                "title" : "func currentLocation() async throws -> Location",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/jxpod\/geopod",
            "title" : "GeoPod",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jackedchart\/anychart",
                "title" : "var anyChart: AnyChartContent",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/jackedchart\/childcharts",
                "title" : "var childCharts: [JackedChart]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/jackedchart",
            "title" : "JackedChart",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/jackedview\/anyview",
                "title" : "var anyView: AnyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/jackedview\/childviews",
                "title" : "var childViews: [JackedView]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/jxpod\/jackedview",
            "title" : "JackedView",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(name:color:)",
                    "title" : "init(name: String, color: CSSColor.RGBColor)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/color",
                    "title" : "var color: CSSColor.RGBColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/name",
                    "title" : "var name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rawvalue",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aliceblue",
                    "title" : "static let aliceblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/allcases",
                    "title" : "static var allCases: [CSSColor.NamedColor]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/antiquewhite",
                    "title" : "static let antiquewhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aqua",
                    "title" : "static let aqua: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/aquamarine",
                    "title" : "static let aquamarine: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/azure",
                    "title" : "static let azure: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/beige",
                    "title" : "static let beige: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/bisque",
                    "title" : "static let bisque: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/black",
                    "title" : "static let black: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blanchedalmond",
                    "title" : "static let blanchedalmond: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blue",
                    "title" : "static let blue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/blueviolet",
                    "title" : "static let blueviolet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/brown",
                    "title" : "static let brown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/burlywood",
                    "title" : "static let burlywood: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cadetblue",
                    "title" : "static let cadetblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/chartreuse",
                    "title" : "static let chartreuse: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/chocolate",
                    "title" : "static let chocolate: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/coral",
                    "title" : "static let coral: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cornflowerblue",
                    "title" : "static let cornflowerblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cornsilk",
                    "title" : "static let cornsilk: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/crimson",
                    "title" : "static let crimson: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/cyan",
                    "title" : "static let cyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkblue",
                    "title" : "static let darkblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkcyan",
                    "title" : "static let darkcyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgoldenrod",
                    "title" : "static let darkgoldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgray",
                    "title" : "static let darkgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgreen",
                    "title" : "static let darkgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkgrey",
                    "title" : "static let darkgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkkhaki",
                    "title" : "static let darkkhaki: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkmagenta",
                    "title" : "static let darkmagenta: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkolivegreen",
                    "title" : "static let darkolivegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkorange",
                    "title" : "static let darkorange: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkorchid",
                    "title" : "static let darkorchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkred",
                    "title" : "static let darkred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darksalmon",
                    "title" : "static let darksalmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkseagreen",
                    "title" : "static let darkseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslateblue",
                    "title" : "static let darkslateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslategray",
                    "title" : "static let darkslategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkslategrey",
                    "title" : "static let darkslategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkturquoise",
                    "title" : "static let darkturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/darkviolet",
                    "title" : "static let darkviolet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/deeppink",
                    "title" : "static let deeppink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/deepskyblue",
                    "title" : "static let deepskyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dimgray",
                    "title" : "static let dimgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dimgrey",
                    "title" : "static let dimgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/dodgerblue",
                    "title" : "static let dodgerblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/firebrick",
                    "title" : "static let firebrick: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/floralwhite",
                    "title" : "static let floralwhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/forestgreen",
                    "title" : "static let forestgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/fuchsia",
                    "title" : "static let fuchsia: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gainsboro",
                    "title" : "static let gainsboro: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/ghostwhite",
                    "title" : "static let ghostwhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gold",
                    "title" : "static let gold: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/goldenrod",
                    "title" : "static let goldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/gray",
                    "title" : "static let gray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/green",
                    "title" : "static let green: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/greenyellow",
                    "title" : "static let greenyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/grey",
                    "title" : "static let grey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/honeydew",
                    "title" : "static let honeydew: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hotpink",
                    "title" : "static let hotpink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/indianred",
                    "title" : "static let indianred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/indigo",
                    "title" : "static let indigo: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/ivory",
                    "title" : "static let ivory: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/khaki",
                    "title" : "static let khaki: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lavender",
                    "title" : "static let lavender: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lavenderblush",
                    "title" : "static let lavenderblush: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lawngreen",
                    "title" : "static let lawngreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lemonchiffon",
                    "title" : "static let lemonchiffon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightblue",
                    "title" : "static let lightblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightcoral",
                    "title" : "static let lightcoral: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightcyan",
                    "title" : "static let lightcyan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgoldenrodyellow",
                    "title" : "static let lightgoldenrodyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgray",
                    "title" : "static let lightgray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgreen",
                    "title" : "static let lightgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightgrey",
                    "title" : "static let lightgrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightpink",
                    "title" : "static let lightpink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightsalmon",
                    "title" : "static let lightsalmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightseagreen",
                    "title" : "static let lightseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightskyblue",
                    "title" : "static let lightskyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightslategray",
                    "title" : "static let lightslategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightslategrey",
                    "title" : "static let lightslategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightsteelblue",
                    "title" : "static let lightsteelblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lightyellow",
                    "title" : "static let lightyellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/lime",
                    "title" : "static let lime: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/limegreen",
                    "title" : "static let limegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/linen",
                    "title" : "static let linen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/magenta",
                    "title" : "static let magenta: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/maroon",
                    "title" : "static let maroon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumaquamarine",
                    "title" : "static let mediumaquamarine: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumblue",
                    "title" : "static let mediumblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumorchid",
                    "title" : "static let mediumorchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumpurple",
                    "title" : "static let mediumpurple: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumseagreen",
                    "title" : "static let mediumseagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumslateblue",
                    "title" : "static let mediumslateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumspringgreen",
                    "title" : "static let mediumspringgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumturquoise",
                    "title" : "static let mediumturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mediumvioletred",
                    "title" : "static let mediumvioletred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/midnightblue",
                    "title" : "static let midnightblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mintcream",
                    "title" : "static let mintcream: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/mistyrose",
                    "title" : "static let mistyrose: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/moccasin",
                    "title" : "static let moccasin: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/navajowhite",
                    "title" : "static let navajowhite: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/navy",
                    "title" : "static let navy: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/oldlace",
                    "title" : "static let oldlace: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/olive",
                    "title" : "static let olive: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/olivedrab",
                    "title" : "static let olivedrab: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orange",
                    "title" : "static let orange: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orangered",
                    "title" : "static let orangered: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/orchid",
                    "title" : "static let orchid: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palegoldenrod",
                    "title" : "static let palegoldenrod: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palegreen",
                    "title" : "static let palegreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/paleturquoise",
                    "title" : "static let paleturquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/palevioletred",
                    "title" : "static let palevioletred: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/papayawhip",
                    "title" : "static let papayawhip: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/peachpuff",
                    "title" : "static let peachpuff: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/peru",
                    "title" : "static let peru: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/pink",
                    "title" : "static let pink: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/plum",
                    "title" : "static let plum: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/powderblue",
                    "title" : "static let powderblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/purple",
                    "title" : "static let purple: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/red",
                    "title" : "static let red: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rosybrown",
                    "title" : "static let rosybrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/royalblue",
                    "title" : "static let royalblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/saddlebrown",
                    "title" : "static let saddlebrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/salmon",
                    "title" : "static let salmon: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/sandybrown",
                    "title" : "static let sandybrown: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/seagreen",
                    "title" : "static let seagreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/seashell",
                    "title" : "static let seashell: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/sienna",
                    "title" : "static let sienna: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/silver",
                    "title" : "static let silver: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/skyblue",
                    "title" : "static let skyblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slateblue",
                    "title" : "static let slateblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slategray",
                    "title" : "static let slategray: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/slategrey",
                    "title" : "static let slategrey: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/snow",
                    "title" : "static let snow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/springgreen",
                    "title" : "static let springgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/steelblue",
                    "title" : "static let steelblue: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tan",
                    "title" : "static let tan: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/teal",
                    "title" : "static let teal: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/thistle",
                    "title" : "static let thistle: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tomato",
                    "title" : "static let tomato: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/transparent",
                    "title" : "static let transparent: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/turquoise",
                    "title" : "static let turquoise: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/violet",
                    "title" : "static let violet: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/wheat",
                    "title" : "static let wheat: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/white",
                    "title" : "static let white: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/whitesmoke",
                    "title" : "static let whitesmoke: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/yellow",
                    "title" : "static let yellow: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/yellowgreen",
                    "title" : "static let yellowgreen: CSSColor.NamedColor",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tojx(in:)",
                        "title" : "func toJX(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/tojxraw(in:)",
                        "title" : "func toJXRaw(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/fromjx(_:)",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/fromjxraw(_:)",
                        "title" : "static func fromJXRaw(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/namedcolor\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/namedcolor",
                "title" : "CSSColor.NamedColor",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(integerliteral:)",
                    "title" : "init(integerLiteral: IntegerLiteralType)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/init(r:g:b:a:)",
                    "title" : "init(r: Double, g: Double, b: Double, a: Double?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/a",
                    "title" : "var a: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/b",
                    "title" : "var b: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/g",
                    "title" : "var g: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/nativecolor",
                    "title" : "var nativeColor: CIColor",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/r",
                    "title" : "var r: Double",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/parsecolor(css:)",
                    "title" : "static func parseColor(css: String) throws -> CSSColor.RGBColor",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/parsehexcolor(css:)",
                    "title" : "static func parseHexColor(css: String) throws -> CSSColor.RGBColor",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/rgbcolor",
                "title" : "CSSColor.RGBColor",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(name:)",
                "title" : "init(name: CSSColor.NamedColor)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(nativecolor:)",
                "title" : "init(nativeColor: CIColor)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/init(rgb:)",
                "title" : "init(rgb: CSSColor.RGBColor)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/nativecolor",
                "title" : "var nativeColor: CIColor",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/rep",
                "title" : "var rep: CSSColor.ColorRepresentation",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/csscolor\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/hexstringinvalid(string:)",
                    "title" : "case hexStringInvalid(string: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/hexstringmissingpercent",
                    "title" : "case hexStringMissingPercent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/parseerrors(errors:)",
                    "title" : "case parseErrors(errors: [Error])",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/colorerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/colorerror",
                "title" : "CSSColor.ColorError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/name(_:)",
                    "title" : "case name(CSSColor.NamedColor)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/rgb(_:)",
                    "title" : "case rgb(CSSColor.RGBColor)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/colorrepresentation",
                "title" : "CSSColor.ColorRepresentation",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/csscolor\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/jxpod\/csscolor\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/csscolor",
            "title" : "CSSColor",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/canvasgradientapi\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasgradientapi\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasgradientapi\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvasgradientapi\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasgradientapi\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasgradientapi\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvasgradientapi\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/canvasgradientapi",
            "title" : "CanvasGradientAPI",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/canvaspatternapi\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvaspatternapi\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvaspatternapi\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvaspatternapi\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvaspatternapi\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvaspatternapi\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvaspatternapi\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/canvaspatternapi",
            "title" : "CanvasPatternAPI",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/canvasrenderingcontext2dsettingsapi",
            "title" : "CanvasRenderingContext2DSettingsAPI",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/dommatrixapi\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/dommatrixapi\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/dommatrixapi\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/dommatrixapi\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/dommatrixapi\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/dommatrixapi\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/dommatrixapi\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/dommatrixapi",
            "title" : "DOMMatrixAPI",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/imagedataapi\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/imagedataapi\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/imagedataapi\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/imagedataapi\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/imagedataapi\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/imagedataapi\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/imagedataapi\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/imagedataapi",
            "title" : "ImageDataAPI",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/jxpod\/jxpod",
            "title" : "JXPod",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/altitude",
                "title" : "var altitude: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/latitude",
                "title" : "var latitude: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/jxpod\/location\/longitude",
                "title" : "var longitude: Double",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/fromjx(_:)",
                    "title" : "static func fromJX(JXValue) throws -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/fromjxcodable(_:)",
                    "title" : "static func fromJXCodable(JXValue) throws -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/tojxcodable(in:)",
                    "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/location\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/jxpod\/location\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/jxpod\/location",
            "title" : "Location",
            "type" : "struct"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/body",
                    "title" : "case body",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/callout",
                    "title" : "case callout",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/caption",
                    "title" : "case caption",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/caption2",
                    "title" : "case caption2",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/footnote",
                    "title" : "case footnote",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/headline",
                    "title" : "case headline",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/largetitle",
                    "title" : "case largeTitle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/subheadline",
                    "title" : "case subheadline",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/title",
                    "title" : "case title",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/title2",
                    "title" : "case title2",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/title3",
                    "title" : "case title3",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/fromjx(_:)-6ufle",
                    "title" : "static func fromJX(JXValue) throws -> FontTemplate.TextStyle",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/fromjx(_:)-9vyhx",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/tojxraw(in:)",
                        "title" : "func toJXRaw(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/fromjx(_:)-91kku",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/fromjxraw(_:)",
                        "title" : "static func fromJXRaw(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/fonttemplate\/textstyle",
                "title" : "FontTemplate.TextStyle",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/black",
                    "title" : "case black",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/bold",
                    "title" : "case bold",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/heavy",
                    "title" : "case heavy",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/light",
                    "title" : "case light",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/medium",
                    "title" : "case medium",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/regular",
                    "title" : "case regular",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/semibold",
                    "title" : "case semibold",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/thin",
                    "title" : "case thin",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/ultralight",
                    "title" : "case ultraLight",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/tojx(in:)",
                    "title" : "func toJX(in: JXContext) throws -> JXValue",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/fromjx(_:)-6uyqp",
                    "title" : "static func fromJX(JXValue) throws -> FontTemplate.Weight",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/fromjx(_:)-8irv8",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/fromjxcodable(_:)",
                        "title" : "static func fromJXCodable(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/tojxcodable(in:)",
                        "title" : "func toJXCodable(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/tojxraw(in:)",
                        "title" : "func toJXRaw(in: JXContext) throws -> JXValue",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/fromjx(_:)-30n0r",
                        "title" : "static func fromJX(JXValue) throws -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/fromjxraw(_:)",
                        "title" : "static func fromJXRaw(JXValue) throws -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/jxpod\/fonttemplate\/weight\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/jxpod\/fonttemplate\/weight",
                "title" : "FontTemplate.Weight",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/jxpod\/fonttemplate",
            "title" : "FontTemplate",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/jxpod",
        "title" : "JXPod",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}